on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

name: Upload Release Asset

jobs:
  build:
    name: build dist folders
    runs-on: ubuntu-latest
    strategy:
       matrix: { dir: ['./actions'] }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - run: npm install
        working-directory: ${{ matrix.dir }}
      - run: npm run build
        working-directory: ${{ matrix.dir }}
      - run: ls
      - run: | 
          cd ./actions/dist
          ls
  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: 
      - build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project  
        run: |
           zip -r  actions.zip actions/dist/**
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "test-2"
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ github.workspace }}/actions.zip
          asset_name: actions.zip
          asset_content_type: application/zip
